{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _mapValues2 = _interopRequireDefault(require(\"lodash/mapValues\"));\n\nvar _values2 = _interopRequireDefault(require(\"lodash/values\"));\n\nvar _trimEnd2 = _interopRequireDefault(require(\"lodash/trimEnd\"));\n\nvar _makeStreamConfig = _interopRequireDefault(require(\"./makeStreamConfig\"));\n\nvar _drawRow = _interopRequireDefault(require(\"./drawRow\"));\n\nvar _drawBorder = require(\"./drawBorder\");\n\nvar _stringifyTableData = _interopRequireDefault(require(\"./stringifyTableData\"));\n\nvar _truncateTableData = _interopRequireDefault(require(\"./truncateTableData\"));\n\nvar _mapDataUsingRowHeightIndex = _interopRequireDefault(require(\"./mapDataUsingRowHeightIndex\"));\n\nvar _alignTableData = _interopRequireDefault(require(\"./alignTableData\"));\n\nvar _padTableData = _interopRequireDefault(require(\"./padTableData\"));\n\nvar _calculateRowHeightIndex = _interopRequireDefault(require(\"./calculateRowHeightIndex\"));\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    \"default\": obj\n  };\n}\n/**\n * @param {Array} data\n * @param {Object} config\n * @returns {Array}\n */\n\n\nvar prepareData = function prepareData(data, config) {\n  var rows;\n  rows = (0, _stringifyTableData[\"default\"])(data);\n  rows = (0, _truncateTableData[\"default\"])(data, config);\n  var rowHeightIndex = (0, _calculateRowHeightIndex[\"default\"])(rows, config);\n  rows = (0, _mapDataUsingRowHeightIndex[\"default\"])(rows, rowHeightIndex, config);\n  rows = (0, _alignTableData[\"default\"])(rows, config);\n  rows = (0, _padTableData[\"default\"])(rows, config);\n  return rows;\n};\n/**\n * @param {string[]} row\n * @param {number[]} columnWidthIndex\n * @param {Object} config\n * @returns {undefined}\n */\n\n\nvar create = function create(row, columnWidthIndex, config) {\n  var rows = prepareData([row], config);\n  var body = rows.map(function (literalRow) {\n    return (0, _drawRow[\"default\"])(literalRow, config.border);\n  }).join('');\n  var output;\n  output = '';\n  output += (0, _drawBorder.drawBorderTop)(columnWidthIndex, config.border);\n  output += body;\n  output += (0, _drawBorder.drawBorderBottom)(columnWidthIndex, config.border);\n  output = (0, _trimEnd2[\"default\"])(output);\n  process.stdout.write(output);\n};\n/**\n * @param {string[]} row\n * @param {number[]} columnWidthIndex\n * @param {Object} config\n * @returns {undefined}\n */\n\n\nvar append = function append(row, columnWidthIndex, config) {\n  var rows = prepareData([row], config);\n  var body = rows.map(function (literalRow) {\n    return (0, _drawRow[\"default\"])(literalRow, config.border);\n  }).join('');\n  var output = '';\n  var bottom = (0, _drawBorder.drawBorderBottom)(columnWidthIndex, config.border);\n\n  if (bottom !== '\\n') {\n    output = \"\\r\\x1B[K\";\n  }\n\n  output += (0, _drawBorder.drawBorderJoin)(columnWidthIndex, config.border);\n  output += body;\n  output += bottom;\n  output = (0, _trimEnd2[\"default\"])(output);\n  process.stdout.write(output);\n};\n/**\n * @param {Object} userConfig\n * @returns {Object}\n */\n\n\nvar createStream = function createStream() {\n  var userConfig = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  var config = (0, _makeStreamConfig[\"default\"])(userConfig); // @todo Use 'Object.values' when Node.js v6 support is dropped.\n\n  var columnWidthIndex = (0, _values2[\"default\"])((0, _mapValues2[\"default\"])(config.columns, function (column) {\n    return column.width + column.paddingLeft + column.paddingRight;\n  }));\n  var empty;\n  empty = true;\n  return {\n    /**\n     * @param {string[]} row\n     * @returns {undefined}\n     */\n    write: function write(row) {\n      if (row.length !== config.columnCount) {\n        throw new Error('Row cell count does not match the config.columnCount.');\n      }\n\n      if (empty) {\n        empty = false;\n        return create(row, columnWidthIndex, config);\n      } else {\n        return append(row, columnWidthIndex, config);\n      }\n    }\n  };\n};\n\nvar _default = createStream;\nexports[\"default\"] = _default;","map":null,"metadata":{},"sourceType":"script"}