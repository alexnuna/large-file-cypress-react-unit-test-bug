{"ast":null,"code":"\"use strict\"; // @ts-ignore\n\nvar unfetch = require('unfetch/dist/unfetch.js'); // @ts-ignore\n\n\nvar isComponentSpec = function isComponentSpec() {\n  return Cypress.spec.specType === 'component';\n}; // When running component specs, we cannot allow \"cy.visit\"\n// because it will wipe out our preparation work, and does not make much sense\n// thus we overwrite \"cy.visit\" to throw an error\n\n\nCypress.Commands.overwrite('visit', function (visit) {\n  var args = [];\n\n  for (var _i = 1; _i < arguments.length; _i++) {\n    args[_i - 1] = arguments[_i];\n  }\n\n  if (isComponentSpec()) {\n    throw new Error('cy.visit from a component spec is not allowed\\n' + 'see https://github.com/bahmutov/cypress-react-unit-test/issues/286');\n  } else {\n    // allow regular visit to proceed\n    return visit.apply(void 0, args);\n  }\n});\n/** Initialize an empty document with root element */\n\nfunction renderTestingPlatform() {\n  // Let's mount components under a new div with this id\n  var rootId = 'cypress-root';\n  var document = cy.state('document');\n\n  if (document.getElementById(rootId)) {\n    return;\n  }\n\n  var rootNode = document.createElement('div');\n  rootNode.setAttribute('id', rootId);\n  document.getElementsByTagName('body')[0].prepend(rootNode);\n  var selector = '#' + rootId;\n  return cy.get(selector, {\n    log: false\n  });\n}\n/**\n * Replaces window.fetch with a polyfill based on XMLHttpRequest\n * that Cypress can spy on and stub\n * @see https://www.cypress.io/blog/2020/06/29/experimental-fetch-polyfill/\n */\n\n\nfunction polyfillFetchIfNeeded() {\n  // @ts-ignore\n  if (Cypress.config('experimentalFetchPolyfill')) {\n    if (!cy.state('fetchPolyfilled')) {\n      // TypeScript v4 checks if the property to be deleted is optional\n      // @ts-ignore\n      delete window.fetch;\n      window.fetch = unfetch; // @ts-ignore\n\n      cy.state('fetchPolyfilled', true);\n    }\n  }\n}\n\nbefore(function () {\n  if (!isComponentSpec()) {\n    return;\n  }\n\n  polyfillFetchIfNeeded();\n  renderTestingPlatform();\n});\n/**\n * Remove any style or extra link elements from the iframe placeholder\n * left from any previous test\n *\n */\n\nfunction cleanupStyles() {\n  if (!isComponentSpec()) {\n    return;\n  }\n\n  var document = cy.state('document');\n  var styles = document.body.querySelectorAll('style');\n  styles.forEach(function (styleElement) {\n    if (styleElement.parentElement) {\n      styleElement.parentElement.removeChild(styleElement);\n    }\n  });\n  var links = document.body.querySelectorAll('link[rel=stylesheet]');\n  links.forEach(function (link) {\n    if (link.parentElement) {\n      link.parentElement.removeChild(link);\n    }\n  });\n}\n\nbeforeEach(cleanupStyles);","map":null,"metadata":{},"sourceType":"script"}